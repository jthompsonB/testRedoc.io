{
    "openapi": "3.0.1",
    "info": {
      "title": "Yellow Dog Fetch API",
      "description": "This is the fetch api for 3rd Party integrations to Yellow Dog Inventory. For authentication documentation and examples go to https://yellowdogsoftware.github.io/fetch-api.",
      "contact": {
        "name": "Support",
        "email": "support@yellowdogsoftware.com"
      },
      "version": "v0.33.0"
    },
    "paths": {
      "/api/v{apiVersion}/accounting/{storeId}/{date}/returnToVendors": {
        "get": {
          "tags": [
            "Accounting"
          ],
          "summary": "Returns a listing of Return to Vendors based on store",
          "parameters": [
            {
              "name": "storeId",
              "in": "path",
              "description": "Id of the store that is being fetched",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Id of the store that is being fetched",
                "format": "uuid"
              }
            },
            {
              "name": "date",
              "in": "path",
              "description": "Date String in the local time of the database server",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Date String in the local time of the database server",
                "format": "date-time"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AccountingReturnToVendor"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/accounting/{storeId}/{date}/invoices": {
        "get": {
          "tags": [
            "Accounting"
          ],
          "summary": "",
          "parameters": [
            {
              "name": "storeId",
              "in": "path",
              "description": "Id of the store that is being fetched",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Id of the store that is being fetched",
                "format": "uuid"
              }
            },
            {
              "name": "date",
              "in": "path",
              "description": "Date String in the local time of the database server",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Date String in the local time of the database server",
                "format": "date-time"
              }
            },
            {
              "name": "nonPrepaidOnly",
              "in": "query",
              "description": "",
              "schema": {
                "type": "boolean",
                "description": "",
                "default": false
              }
            },
            {
              "name": "includeReceipts",
              "in": "query",
              "description": "",
              "schema": {
                "type": "boolean",
                "description": "",
                "default": false
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AccountingInvoice"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/accounting/{storeId}/{date}/revenue": {
        "get": {
          "tags": [
            "Accounting"
          ],
          "summary": "",
          "parameters": [
            {
              "name": "storeId",
              "in": "path",
              "description": "Id of the store that is being fetched",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Id of the store that is being fetched",
                "format": "uuid"
              }
            },
            {
              "name": "date",
              "in": "path",
              "description": "Date String in the local time of the database server",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Date String in the local time of the database server",
                "format": "date-time"
              }
            },
            {
              "name": "types",
              "in": "query",
              "description": "Choose one or more of the following Journal Entry types (Sale, Tax, Tender)",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Choose one or more of the following Journal Entry types (Sale, Tax, Tender)",
                "nullable": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AccountingRevenue"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/accounting/{storeId}/{date}/journalEntry": {
        "get": {
          "tags": [
            "Accounting"
          ],
          "summary": "",
          "parameters": [
            {
              "name": "storeId",
              "in": "path",
              "description": "Id of the store that is being fetched",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Id of the store that is being fetched",
                "format": "uuid"
              }
            },
            {
              "name": "date",
              "in": "path",
              "description": "Date String in the local time of the database server",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Date String in the local time of the database server",
                "format": "date-time"
              }
            },
            {
              "name": "types",
              "in": "query",
              "description": "Choose one or more of the following Journal Entry types (PhysicalInventory, ManualAdjustment, CostOfGoodsSold, Transfer, Receipt)",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Choose one or more of the following Journal Entry types (PhysicalInventory, ManualAdjustment, CostOfGoodsSold, Transfer, Receipt)",
                "nullable": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AccountingJournalEntry"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/accounting/{storeId}/codes/{codeType}": {
        "get": {
          "tags": [
            "Accounting"
          ],
          "summary": "Gets a listing of accounts and their code data",
          "parameters": [
            {
              "name": "storeId",
              "in": "path",
              "description": "Id of the store that is being fetched",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Id of the store that is being fetched",
                "format": "uuid"
              }
            },
            {
              "name": "codeType",
              "in": "query",
              "description": "Type of account",
              "schema": {
                "type": "string",
                "description": "Type of account",
                "nullable": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "codeType",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AccountingCode"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/attachedFiles/{id}": {
        "get": {
          "tags": [
            "AttachedFile"
          ],
          "summary": "Gets image based on Id. This image can be associated to an Item or a Recipe.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "AttachedFile Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "AttachedFile Id",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "image/png": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/countsheets": {
        "get": {
          "tags": [
            "CountSheets"
          ],
          "summary": "Getting Count Sheets",
          "operationId": "GetCountSheets",
          "parameters": [
            {
              "name": "Expand",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CountSheetGet"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/countsheets/{id}": {
        "get": {
          "tags": [
            "CountSheets"
          ],
          "summary": "Getting a Count Sheet by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CountSheet Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CountSheet Id",
                "format": "uuid"
              }
            },
            {
              "name": "Expand",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CountSheetGet"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/currency": {
        "get": {
          "tags": [
            "Currency"
          ],
          "summary": "Getting Currency",
          "operationId": "GetCurrency",
          "parameters": [
            {
              "name": "Filter",
              "in": "query",
              "description": "### Filter Options:\r\n- currencyCode\r\n- date\r\n- exchangeRate\r\n- lastUpdated",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Filter Options:\r\n- currencyCode\r\n- date\r\n- exchangeRate\r\n- lastUpdated",
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "description": "### Order By Options:\r\n- currencyCode\r\n- date\r\n- lastUpdated",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Order By Options:\r\n- currencyCode\r\n- date\r\n- lastUpdated",
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CurrencyGet"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Currency"
          ],
          "summary": "Creating new Currency Exchange Rate",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CurrencyGet"
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Currency"
          ],
          "summary": "Updating existing Currency Exchange Rate",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyUpdate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyUpdate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyUpdate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyUpdate"
                  },
                  "description": "",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CurrencyGet"
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Currency"
          ],
          "summary": "Bulk delete Currency Exchange Rates",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "List of Currency IDs to be deleted",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "List of Currency IDs to be deleted",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "List of Currency IDs to be deleted",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "List of Currency IDs to be deleted",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "List of Currency IDs to be deleted",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/currency/effectiveExchangeRate/{currencyCode}": {
        "get": {
          "tags": [
            "Currency"
          ],
          "summary": "Getting Currency by Id",
          "parameters": [
            {
              "name": "currencyCode",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "nullable": true
              }
            },
            {
              "name": "date",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string",
                "description": "",
                "format": "date-time"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "number",
                    "format": "double"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/currency/{id}": {
        "get": {
          "tags": [
            "Currency"
          ],
          "summary": "Getting Currency by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CurrencyGet"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Currency"
          ],
          "summary": "Deleting a Currency Exchange Rate",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/dimensions": {
        "get": {
          "tags": [
            "Dimensions"
          ],
          "summary": "Getting Dimensions",
          "operationId": "GetDimensions",
          "parameters": [
            {
              "name": "Expand",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DimensionGet"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Dimensions"
          ],
          "summary": "Creating new Dimensions",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Dimensions"
          ],
          "summary": "Updating existing Dimensions",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/dimensions/{id}": {
        "get": {
          "tags": [
            "Dimensions"
          ],
          "summary": "Getting Dimension by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Dimension Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Dimension Id",
                "format": "uuid"
              }
            },
            {
              "name": "Expand",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DimensionGet"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Dimensions"
          ],
          "summary": "Deleting a Dimension",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Dimension Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Dimension Id",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/flags": {
        "get": {
          "tags": [
            "Flags"
          ],
          "summary": "Getting Flags",
          "operationId": "GetFlags",
          "parameters": [
            {
              "name": "Expand",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FlagGet"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/flags/{id}": {
        "get": {
          "tags": [
            "Flags"
          ],
          "summary": "Getting Flag by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Flag Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Flag Id",
                "format": "uuid"
              }
            },
            {
              "name": "Expand",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlagGet"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/inventory": {
        "post": {
          "tags": [
            "Inventory"
          ],
          "summary": "Gets all Inventory",
          "operationId": "GetInventory",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQueryParameters"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQueryParameters"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQueryParameters"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQueryParameters"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Inventory"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/itemaliases": {
        "post": {
          "tags": [
            "ItemAliases"
          ],
          "summary": "Adding Item Aliases",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemAliasCreateRequest"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemAliasCreateRequest"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemAliasCreateRequest"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemAliasCreateRequest"
                  },
                  "description": "",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ItemAliasCreateResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/items": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Gets all Items",
          "operationId": "GetItems",
          "parameters": [
            {
              "name": "Filter",
              "in": "query",
              "description": "### Filter Options:\r\n- active\r\n- lastUpdated\r\n- levelId\r\n- sku",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Filter Options:\r\n- active\r\n- lastUpdated\r\n- levelId\r\n- sku",
                "nullable": true
              }
            },
            {
              "name": "Expand",
              "in": "query",
              "description": "### Expand Options:\r\n- stores\r\n- vendors\r\n- images (available on database versions above 366)",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Expand Options:\r\n- stores\r\n- vendors\r\n- images (available on database versions above 366)",
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "description": "### Order By Options:\r\n- sku\r\n- description\r\n- itemId",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Order By Options:\r\n- sku\r\n- description\r\n- itemId",
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemGet"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/items/{id}": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Gets an Item by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "format": "uuid"
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "description": "### Filter Options:\r\n- active\r\n- lastUpdated\r\n- levelId\r\n- sku",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Filter Options:\r\n- active\r\n- lastUpdated\r\n- levelId\r\n- sku",
                "nullable": true
              }
            },
            {
              "name": "Expand",
              "in": "query",
              "description": "### Expand Options:\r\n- stores\r\n- vendors\r\n- images (available on database versions above 366)",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Expand Options:\r\n- stores\r\n- vendors\r\n- images (available on database versions above 366)",
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "description": "### Order By Options:\r\n- sku\r\n- description\r\n- itemId",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Order By Options:\r\n- sku\r\n- description\r\n- itemId",
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemGet"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/items/{itemId}/images": {
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Adds an Image as an Attached File to an Item.\r\n\r\nUser's client *MUST* be 366+ with cloud storage enabled",
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "Item Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Item Id",
                "format": "uuid"
              }
            },
            {
              "name": "description",
              "in": "query",
              "description": "Description or Title of the Image file",
              "schema": {
                "type": "string",
                "description": "Description or Title of the Image file",
                "nullable": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "Image file",
                      "format": "binary",
                      "nullable": true
                    }
                  }
                },
                "encoding": {
                  "file": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenericObject"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/items/{itemId}/addImage": {
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Adds an Image as an Attached File to an Item\r\n\r\nUser's client *MUST* be 366+ with cloud storage enabled",
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "Item Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Item Id",
                "format": "uuid"
              }
            },
            {
              "name": "description",
              "in": "query",
              "description": "Description or Title of the Image file",
              "schema": {
                "type": "string",
                "description": "Description or Title of the Image file",
                "nullable": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "Image file",
                      "format": "binary",
                      "nullable": true
                    }
                  }
                },
                "encoding": {
                  "file": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenericObject"
                  }
                }
              }
            }
          },
          "deprecated": true
        }
      },
      "/api/v{apiVersion}/items/{itemId}/images/{imageId}": {
        "delete": {
          "tags": [
            "Items"
          ],
          "summary": "Deletes an item's image",
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "Item Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Item Id",
                "format": "uuid"
              }
            },
            {
              "name": "imageId",
              "in": "path",
              "description": "Attached File Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Attached File Id",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "patch": {
          "tags": [
            "Items"
          ],
          "summary": "Updates the Description of an Items Attached File",
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "Item Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Item Id",
                "format": "uuid"
              }
            },
            {
              "name": "imageId",
              "in": "path",
              "description": "Attached File Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Attached File Id",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "New Description of the Attached File",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedFileMutation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedFileMutation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedFileMutation"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedFileMutation"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AttachedFile"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/items/{id}/retails": {
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Adds a new record for an item's retail",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Item Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Item Id",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Item Retail Creation Object",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemRetailCreate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemRetailCreate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemRetailCreate"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemRetailCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemRetailCreateResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/manualadjusts": {
        "post": {
          "tags": [
            "ManualAdjusts"
          ],
          "summary": "Creates Manual Adjustments",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManualAdjustCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManualAdjustCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManualAdjustCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManualAdjustCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/metainfo": {
        "get": {
          "tags": [
            "MetaInfo"
          ],
          "summary": "Get all Meta Information for YDI Interface",
          "description": "In Yellow Dog the user is able to configure the Names that are used on buttons to make the user interface more friendly for their particular use. This endpoint will display the values of these name changes.\r\n\r\nCommon examples of this are:\r\n- Dimension 1 is named Size in the Yellow Dog Interface, Dimension 1 (Size) will be index 0 of the dimensions array.\r\n- Flag is named Location",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MetaInfo"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/purchaseOrders/{id}/requestTieredApproval": {
        "post": {
          "tags": [
            "PurchaseOrders"
          ],
          "summary": "Starts the process of Tiered Purchase Order Approval process",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CommDoc Id of Purchase Order",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CommDoc Id of Purchase Order",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SendGridUserResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/purchaseOrders/tieredApproval": {
        "put": {
          "tags": [
            "PurchaseOrders"
          ],
          "summary": "Approves a Purchase Order Tier",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/POTierApprovalPUT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POTierApprovalPUT"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/POTierApprovalPUT"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/POTierApprovalPUT"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/POTierApprovalPUTResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/purchaseOrders": {
        "get": {
          "tags": [
            "PurchaseOrders"
          ],
          "summary": "Gets Purchase Orders",
          "operationId": "GetPurchaseOrders",
          "parameters": [
            {
              "name": "Filter",
              "in": "query",
              "description": "### Filter Options:\r\n- docNumber\r\n- committed\r\n- lastUpdated\r\n- vendor",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Filter Options:\r\n- docNumber\r\n- committed\r\n- lastUpdated\r\n- vendor",
                "nullable": true
              }
            },
            {
              "name": "Expand",
              "in": "query",
              "description": "### Expand Options:\r\n- Items\r\n- Stores\r\n- Users\r\n- Vendors\r\n- LineDetails\r\n- ApprovalStatuses",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Expand Options:\r\n- Items\r\n- Stores\r\n- Users\r\n- Vendors\r\n- LineDetails\r\n- ApprovalStatuses",
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "description": "### Order By Options:\r\n- committed\r\n- docNumber\r\n- lastUpdated",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Order By Options:\r\n- committed\r\n- docNumber\r\n- lastUpdated",
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PurchaseOrderGet"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "PurchaseOrders"
          ],
          "summary": "Creates Purchase Orders.",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrderCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PurchaseOrderCreate"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/purchaseOrders/{id}": {
        "get": {
          "tags": [
            "PurchaseOrders"
          ],
          "summary": "Get Purchase Order by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CommDoc Id of Purchase Order",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CommDoc Id of Purchase Order",
                "format": "uuid"
              }
            },
            {
              "name": "Expand",
              "in": "query",
              "description": "### Expand Options:\r\n- Items\r\n- Stores\r\n- Users\r\n- Vendors\r\n- LineDetails\r\n- ApprovalStatuses",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Expand Options:\r\n- Items\r\n- Stores\r\n- Users\r\n- Vendors\r\n- LineDetails\r\n- ApprovalStatuses",
                "nullable": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PurchaseOrderGet"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/purchaseOrders/byToken": {
        "get": {
          "tags": [
            "PurchaseOrders"
          ],
          "summary": "Get Purchase Order by token",
          "parameters": [
            {
              "name": "Expand",
              "in": "query",
              "description": "### Expand Options:\r\n- Items\r\n- Stores\r\n- Users\r\n- Vendors\r\n- LineDetails\r\n- ApprovalStatuses",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Expand Options:\r\n- Items\r\n- Stores\r\n- Users\r\n- Vendors\r\n- LineDetails\r\n- ApprovalStatuses",
                "nullable": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PurchaseOrderGet"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/purchaseOrders/{id}/approvalStatus": {
        "get": {
          "tags": [
            "PurchaseOrders"
          ],
          "summary": "Get Purchase Order Approval Status by Id of Purchase Order",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CommDoc Id of Purchase Order",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CommDoc Id of Purchase Order",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CommdocApprovalStatuses"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/purchaseOrders/approvalStatusByToken": {
        "get": {
          "tags": [
            "PurchaseOrders"
          ],
          "summary": "Get Purchase Order Approval Status using token",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CommdocApprovalStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/receipts": {
        "get": {
          "tags": [
            "Receipts"
          ],
          "summary": "Gets Receipts",
          "operationId": "GetReceipts",
          "parameters": [
            {
              "name": "Filter",
              "in": "query",
              "description": "### Filter Options:\r\n- docNumber\r\n- committed\r\n- lastUpdated\r\n- vendor",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Filter Options:\r\n- docNumber\r\n- committed\r\n- lastUpdated\r\n- vendor",
                "nullable": true
              }
            },
            {
              "name": "Expand",
              "in": "query",
              "description": "### Expand Options:\r\n- Items\r\n- Stores\r\n- Users\r\n- Vendors",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Expand Options:\r\n- Items\r\n- Stores\r\n- Users\r\n- Vendors",
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "description": "### Order By Options:\r\n- committed\r\n- docNumber\r\n- lastUpdated",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Order By Options:\r\n- committed\r\n- docNumber\r\n- lastUpdated",
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ReceiptGet"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/receipts/{id}": {
        "get": {
          "tags": [
            "Receipts"
          ],
          "summary": "Get Receipt by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of Receipt",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Id of Receipt",
                "format": "uuid"
              }
            },
            {
              "name": "Expand",
              "in": "query",
              "description": "### Expand Options:\r\n- Items\r\n- Stores\r\n- Users\r\n- Vendors",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Expand Options:\r\n- Items\r\n- Stores\r\n- Users\r\n- Vendors",
                "nullable": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ReceiptGet"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/recipes/{recipeId}/images": {
        "post": {
          "tags": [
            "Recipes"
          ],
          "summary": "Adds an Image as an Attached File to a recipe\r\n\r\nUser's client *MUST* be 366+ with cloud storage enabled",
          "parameters": [
            {
              "name": "recipeId",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "format": "uuid"
              }
            },
            {
              "name": "description",
              "in": "query",
              "description": "Description or Title of the Image file",
              "schema": {
                "type": "string",
                "description": "Description or Title of the Image file",
                "nullable": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "Image file",
                      "format": "binary",
                      "nullable": true
                    }
                  }
                },
                "encoding": {
                  "file": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenericObject"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/recipes/{recipeId}/images/{imageId}": {
        "delete": {
          "tags": [
            "Recipes"
          ],
          "summary": "Deletes a recipe's image",
          "parameters": [
            {
              "name": "recipeId",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "format": "uuid"
              }
            },
            {
              "name": "imageId",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "patch": {
          "tags": [
            "Recipes"
          ],
          "summary": "Updates a the image details of a recipe",
          "parameters": [
            {
              "name": "recipeId",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "format": "uuid"
              }
            },
            {
              "name": "imageId",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedFileMutation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedFileMutation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedFileMutation"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedFileMutation"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AttachedFile"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/requests": {
        "post": {
          "tags": [
            "Requests"
          ],
          "summary": "Creates and commits a Request to be used in the Purchasing Document Workflow.",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Object of the Request to be created",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestCreate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestCreate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestCreate"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/requests/{id}/Commit": {
        "patch": {
          "tags": [
            "Requests"
          ],
          "summary": "Commits a Request, this allows the Request to be used in future steps of the Purchasing Document Workflow",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CommDoc Id of Request",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CommDoc Id of Request",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/requests/{id}": {
        "patch": {
          "tags": [
            "Requests"
          ],
          "summary": "Updates an existing Request",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CommDoc Id of Request",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CommDoc Id of Request",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Any alterations to the Request",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestCreate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestCreate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestCreate"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/sessions": {
        "get": {
          "tags": [
            "Sessions"
          ],
          "summary": "Getting Sessions",
          "operationId": "GetSessions",
          "parameters": [
            {
              "name": "Expand",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SessionGet"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Sessions"
          ],
          "summary": "Creating new Sessions",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Sessions"
          ],
          "summary": "Updating existing Sessions",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionCreate"
                  },
                  "description": "",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/sessions/{id}": {
        "get": {
          "tags": [
            "Sessions"
          ],
          "summary": "Getting Session by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Session Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Session Id",
                "format": "uuid"
              }
            },
            {
              "name": "Expand",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionGet"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Sessions"
          ],
          "summary": "Deleting a Session",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Session Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Session Id",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/sessions/{id}/sessionItems": {
        "post": {
          "tags": [
            "Sessions"
          ],
          "summary": "Adding a Session Item to a Session",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Session Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Session Id",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "creation params",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionItemCreate2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionItemCreate2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionItemCreate2"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionItemCreate2"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionItemMutationResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/sessions/{id}/sessionItems/{sessionItemId}/count": {
        "put": {
          "tags": [
            "Sessions"
          ],
          "summary": "Updating values of a Session Item",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Session Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Session Id",
                "format": "uuid"
              }
            },
            {
              "name": "sessionItemId",
              "in": "path",
              "description": "Session Item Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Session Item Id",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "update params",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionItemUpdate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionItemUpdate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionItemUpdate"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionItemUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionItemMutationResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/stores": {
        "get": {
          "tags": [
            "Stores"
          ],
          "summary": "Gets Stores",
          "operationId": "GetStores",
          "parameters": [
            {
              "name": "Expand",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/StoreGet"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/stores/{id}": {
        "get": {
          "tags": [
            "Stores"
          ],
          "summary": "Gets Store by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Store Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Store Id",
                "format": "uuid"
              }
            },
            {
              "name": "Expand",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StoreGet"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/stores/{id}/interfaces/ThirdPartyCodes": {
        "get": {
          "tags": [
            "Stores"
          ],
          "summary": "Gets a Store's ThirdPartyCodes",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Store Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Store Id",
                "format": "uuid"
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "description": "### Filter Options:\r\n- code\r\n- type",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Filter Options:\r\n- code\r\n- type",
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "description": "### Order By Options:\r\n- code\r\n- type",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Order By Options:\r\n- code\r\n- type",
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPCodeGet"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/interfaces/thirdPartyCodes": {
        "get": {
          "tags": [
            "ThirdPartyCodes"
          ],
          "summary": "Gets all Third Party Codes",
          "operationId": "GetTPCodes",
          "parameters": [
            {
              "name": "Filter",
              "in": "query",
              "description": "### Filter Options:\r\n- code\r\n- type",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Filter Options:\r\n- code\r\n- type",
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "description": "### Order By Options:\r\n- code\r\n- type",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Order By Options:\r\n- code\r\n- type",
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TPCodeGet"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "ThirdPartyCodes"
          ],
          "summary": "Creates Third Party Codes",
          "description": "## Standard Request Example\r\n\r\nThird Party Codes are configuration options exposed to the Yellow Dog Inventory user that allow for behavior changes for an item or a setting. A common use case is for managing what the tax code might be for a particular item so that the integration is able to associate the proper tax rate on sale of the item.\r\n\r\n### POST /thirdPartyCodes\r\n\r\n```json\r\n[\r\n\t{\r\n\t\t\"type\": \"IntegrationNameTaxGrouping\", // This will be displayed in the Interfaces tab under the Accounting/Other section as \"Integration Name Tax Grouping\"\r\n\t\t\"code\": \"1\", // Identifier used by the Integrator to match certain behavior on their side of the integration.\r\n\t\t\"description\": \"local tax\" // User friendly description that will be displayed to the user as part of a drop down box titled by the `type`\r\n\t\t\"store\": {\r\n\t\t\t\"id\": \"123e4567-e89b-12d3-a456-426655440000\" // Id of the store this Code should be active for. If this code should be active for all stores use an id value of \"00000000-0000-0000-0000-000000000000\"\r\n\t\t}\r\n\t}\r\n]\r\n```\r\n\r\n## Modifiers Example\r\n\r\nIf the third party integrator would like to allow enabling of true/false values for allowing Yellow Dog clients to enable item behavior in the integration, we recommend that this be accomplished by the following example.\r\n\r\n### POST /thirdPartyCodes\r\n\r\n```json\r\n[\r\n\t{\r\n\t\t\"type\": \"IntegrationNameIsModifier\",\r\n\t\t\"code\": \"true\", \r\n\t\t\"description\": \"Is a Modifier\" \r\n\t\t\"store\": {\r\n\t\t\t\"id\": \"123e4567-e89b-12d3-a456-426655440000\" \r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"type\": \"IntegrationNameIsModifier\", \r\n\t\t\"code\": \"false\", \r\n\t\t\"description\": \"Is not a modifier\" \r\n\t\t\"store\": {\r\n\t\t\t\"id\": \"123e4567-e89b-12d3-a456-426655440000\" \r\n\t\t}\r\n\t}\r\n]\r\n```",
          "parameters": [
            {
              "name": "suppressOutput",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPCodeCreate"
                  },
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPCodeCreate"
                  },
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPCodeCreate"
                  },
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPCodeCreate"
                  },
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Received Request with no values in the body."
            },
            "201": {
              "description": "Returns the newly created ThirdPartyCodes, if suppressOutput parameter is set to false.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TPCode"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Error has occured.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "ThirdPartyCodes"
          ],
          "summary": "Updates Third Party Codes",
          "parameters": [
            {
              "name": "suppressOutput",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPCodeUpdate"
                  },
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPCodeUpdate"
                  },
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPCodeUpdate"
                  },
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPCodeUpdate"
                  },
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Returns the updated ThirdPartyCodes, if suppressOutput parameter is set to false.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TPCode"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Error has occured.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "ThirdPartyCodes"
          ],
          "summary": "Bulk delete Third Party Codes",
          "parameters": [
            {
              "name": "suppressOutput",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/interfaces/thirdPartyCodes/{id}": {
        "get": {
          "tags": [
            "ThirdPartyCodes"
          ],
          "summary": "Gets Third Party Code by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPCodeGet"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "ThirdPartyCodes"
          ],
          "summary": "Deleting a Third Party Code",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Third Party Code Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Third Party Code Id",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/thirdPartySessions": {
        "get": {
          "tags": [
            "ThirdPartySessions"
          ],
          "summary": "Gets all Third Party Sessions",
          "operationId": "GetTPSessions",
          "parameters": [
            {
              "name": "Filter",
              "in": "query",
              "description": "### Filter Options:\r\n- code\r\n- dateTime",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Filter Options:\r\n- code\r\n- dateTime",
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "description": "### Order By Options:\r\n- code\r\n- dateTime",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Order By Options:\r\n- code\r\n- dateTime",
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TPSessionGet"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "ThirdPartySessions"
          ],
          "summary": "Creates Third Party Sessions",
          "parameters": [
            {
              "name": "suppressOutput",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPSession"
                  },
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPSession"
                  },
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPSession"
                  },
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TPSession"
                  },
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TPSessionGet"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/thirdPartySessions/{id}": {
        "get": {
          "tags": [
            "ThirdPartySessions"
          ],
          "summary": "Gets Third Party Session by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TPSessionGet"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/transactions": {
        "get": {
          "tags": [
            "Transactions"
          ],
          "summary": "Getting all Transactions",
          "operationId": "GetTransactions",
          "parameters": [
            {
              "name": "Filter",
              "in": "query",
              "description": "### Filter Options:\r\n- checkClosed",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Filter Options:\r\n- checkClosed",
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Transactions"
          ],
          "summary": "Creates or Updates Transactions",
          "description": "If inserting a new record it is highly recommended that you provide a ThirdPartyId which should correspond\r\nto the ID your system uses to uniquely identify the transaction. If the ThirdPartyId and / or ThirdPartyLineId wasn't\r\nprovided the API will auto create one for you.",
          "parameters": [
            {
              "name": "suppressOutput",
              "in": "query",
              "description": "Default: true\r\nIf true the api will not respond with transactions created or updated in the response. Errors are still shown if applicable.",
              "schema": {
                "type": "boolean",
                "description": "Default: true\r\nIf true the api will not respond with transactions created or updated in the response. Errors are still shown if applicable.",
                "default": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  },
                  "description": "",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  },
                  "description": "",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/transactions/store/{storeId}": {
        "get": {
          "tags": [
            "Transactions"
          ],
          "summary": "Gets Transactions by Store",
          "operationId": "GetTransactionsByStore",
          "parameters": [
            {
              "name": "storeId",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "format": "uuid"
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "description": "### Filter Options:\r\n- checkClosed",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Filter Options:\r\n- checkClosed",
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/transactions/{thirdPartyId}": {
        "get": {
          "tags": [
            "Transactions"
          ],
          "summary": "Gets Transaction by ThirdPartyId",
          "parameters": [
            {
              "name": "thirdPartyId",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "description": "",
                "nullable": true
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/transfers/{id}/Accept": {
        "patch": {
          "tags": [
            "Transfers"
          ],
          "summary": "Accepts a Transfer",
          "description": "Accepting a Transfer is an indication that the Store on the recieving side of the Item movement has\r\n            been recieved at the quantities indicated by the accepting quantity.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CommDoc Id of Transfer",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CommDoc Id of Transfer",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Any alterations to the accepting Transfer",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferAccept"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferAccept"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferAccept"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferAccept"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/transfers/{id}/Issue": {
        "patch": {
          "tags": [
            "Transfers"
          ],
          "summary": "Issues a Transfer",
          "description": "Issuing a Transfer is an indication that the Store on the sending side of the Item movement \r\n            has been sent to the Store on the Recieving side.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CommDoc Id of Transfer",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CommDoc Id of Transfer",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/transfers": {
        "post": {
          "tags": [
            "Transfers"
          ],
          "summary": "Creates a Transfer",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Object Representing a Transfer to be created",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferCreate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferCreate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferCreate"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/transfers/{id}/lines": {
        "post": {
          "tags": [
            "Transfers"
          ],
          "summary": "Add Additional lines to an existing Transfer that has not been committed",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CommDoc Id of Transfer",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CommDoc Id of Transfer",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "new lines to be added to Transfer",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommDocLineCreate"
                  },
                  "description": "new lines to be added to Transfer",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommDocLineCreate"
                  },
                  "description": "new lines to be added to Transfer",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommDocLineCreate"
                  },
                  "description": "new lines to be added to Transfer",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommDocLineCreate"
                  },
                  "description": "new lines to be added to Transfer",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CommdocLine"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CommdocLine"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CommdocLine"
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Transfers"
          ],
          "summary": "Delete existing lines from a Transfer",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CommDoc Id of Transfer",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CommDoc Id of Transfer",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "unique identifiers of lines to be deleted",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "unique identifiers of lines to be deleted",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "unique identifiers of lines to be deleted",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "unique identifiers of lines to be deleted",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "unique identifiers of lines to be deleted",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CommdocLine"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CommdocLine"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CommdocLine"
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "Transfers"
          ],
          "summary": "Updates existing lines of a given Transfer",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CommDoc Id of Transfer",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CommDoc Id of Transfer",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Any alterations to a Transfer",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommDocLineUpdate"
                  },
                  "description": "Any alterations to a Transfer",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommDocLineUpdate"
                  },
                  "description": "Any alterations to a Transfer",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommDocLineUpdate"
                  },
                  "description": "Any alterations to a Transfer",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommDocLineUpdate"
                  },
                  "description": "Any alterations to a Transfer",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CommdocLine"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CommdocLine"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CommdocLine"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/transfers/{id}": {
        "patch": {
          "tags": [
            "Transfers"
          ],
          "summary": "Updates an existing Transfer",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "CommDoc Id of Transfer",
              "required": true,
              "schema": {
                "type": "string",
                "description": "CommDoc Id of Transfer",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Updated data regarding Transfer",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferUpdate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferUpdate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferUpdate"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v{apiVersion}/vendors": {
        "get": {
          "tags": [
            "Vendors"
          ],
          "summary": "Getting Vendors",
          "operationId": "GetVendors",
          "parameters": [
            {
              "name": "Filter",
              "in": "query",
              "description": "### Filter Options:\r\n- code\r\n- description\r\n- url\r\n- collectsTax\r\n- notes\r\n- created\r\n- lastUpdated",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Filter Options:\r\n- code\r\n- description\r\n- url\r\n- collectsTax\r\n- notes\r\n- created\r\n- lastUpdated",
                "nullable": true
              }
            },
            {
              "name": "OrderBy",
              "in": "query",
              "description": "### Order By Options:\r\n- code\r\n- created\r\n- lastUpdated",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "### Order By Options:\r\n- code\r\n- created\r\n- lastUpdated",
                "nullable": true
              }
            },
            {
              "name": "PageNumber",
              "in": "query",
              "description": "- PageNumber Starts at 1",
              "schema": {
                "type": "integer",
                "description": "- PageNumber Starts at 1",
                "format": "int32"
              }
            },
            {
              "name": "PageSize",
              "in": "query",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "schema": {
                "type": "integer",
                "description": "- Default page size: 100\r\n- Max page size: 500",
                "format": "int32"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/VendorGet"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Vendors"
          ],
          "summary": "Creating new Vendors",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Object Used to Create Vendors",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorCreate"
                  },
                  "description": "Object Used to Create Vendors",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorCreate"
                  },
                  "description": "Object Used to Create Vendors",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorCreate"
                  },
                  "description": "Object Used to Create Vendors",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorCreate"
                  },
                  "description": "Object Used to Create Vendors",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/VendorGet"
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Vendors"
          ],
          "summary": "Updating existing Vendors",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Object Used to update an existing Vendors",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorUpdate"
                  },
                  "description": "Object Used to update an existing Vendors",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorUpdate"
                  },
                  "description": "Object Used to update an existing Vendors",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorUpdate"
                  },
                  "description": "Object Used to update an existing Vendors",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorUpdate"
                  },
                  "description": "Object Used to update an existing Vendors",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/VendorGet"
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Vendors"
          ],
          "summary": "Bulk delete Vendors",
          "parameters": [
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "List of Vendor Ids to be deleted",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "List of Vendor Ids to be deleted",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "List of Vendor Ids to be deleted",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "List of Vendor Ids to be deleted",
                  "nullable": true
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "description": "List of Vendor Ids to be deleted",
                  "nullable": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v{apiVersion}/vendors/{id}": {
        "get": {
          "tags": [
            "Vendors"
          ],
          "summary": "Getting Vendor by Id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Vendor Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Vendor Id",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/VendorGet"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Vendors"
          ],
          "summary": "Deleting a Vendor",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Vendor Id",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Vendor Id",
                "format": "uuid"
              }
            },
            {
              "name": "apiVersion",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "AccountingUser": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "employeeNumber": {
              "type": "string",
              "nullable": true
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "middleName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AccountingVendor": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "accountingId": {
              "type": "string",
              "nullable": true
            },
            "reference": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AccountingStore": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "accountingId": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AccountingLine": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "nullable": true
            },
            "glAccount": {
              "type": "string",
              "nullable": true
            },
            "credit": {
              "type": "number",
              "format": "double"
            },
            "debit": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "AccountingReturnToVendor": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "docNumber": {
              "type": "string",
              "nullable": true
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "paid": {
              "type": "boolean"
            },
            "prepaid": {
              "type": "boolean"
            },
            "paymentDue": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "billed": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committed": {
              "type": "string",
              "format": "date-time"
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            },
            "reference": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructions": {
              "type": "string",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "totalAmount": {
              "type": "number",
              "format": "double"
            },
            "currencyCode": {
              "type": "string",
              "nullable": true
            },
            "committedByUser": {
              "$ref": "#/components/schemas/AccountingUser"
            },
            "createdByUser": {
              "$ref": "#/components/schemas/AccountingUser"
            },
            "vendor": {
              "$ref": "#/components/schemas/AccountingVendor"
            },
            "store": {
              "$ref": "#/components/schemas/AccountingStore"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountingLine"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AccountingInvoice": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "docNumber": {
              "type": "string",
              "nullable": true
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "paid": {
              "type": "boolean"
            },
            "prepaid": {
              "type": "boolean"
            },
            "paymentDue": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "billed": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committed": {
              "type": "string",
              "format": "date-time"
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            },
            "reference": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructions": {
              "type": "string",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "totalAmount": {
              "type": "number",
              "format": "double"
            },
            "currencyCode": {
              "type": "string",
              "nullable": true
            },
            "committedByUser": {
              "$ref": "#/components/schemas/AccountingUser"
            },
            "createdByUser": {
              "$ref": "#/components/schemas/AccountingUser"
            },
            "vendor": {
              "$ref": "#/components/schemas/AccountingVendor"
            },
            "store": {
              "$ref": "#/components/schemas/AccountingStore"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountingLine"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AccountingRevenue": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "store": {
              "$ref": "#/components/schemas/AccountingStore"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountingLine"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AccountingJournalEntry": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "store": {
              "$ref": "#/components/schemas/AccountingStore"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountingLine"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AccountingCodeStore": {
          "type": "object",
          "properties": {
            "accountGLCode": {
              "type": "string",
              "nullable": true
            },
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "accountingId": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AccountingCode": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "type": "string",
              "nullable": true
            },
            "placement": {
              "type": "integer",
              "format": "int32"
            },
            "store": {
              "$ref": "#/components/schemas/AccountingCodeStore"
            }
          },
          "additionalProperties": false
        },
        "CountSheetItemGet": {
          "type": "object",
          "properties": {
            "countSheetID": {
              "type": "string",
              "format": "uuid"
            },
            "flagID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "flagCode": {
              "type": "string",
              "nullable": true
            },
            "flagDescription": {
              "type": "string",
              "nullable": true
            },
            "itemID": {
              "type": "string",
              "format": "uuid"
            },
            "placement": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "CountSheetGet": {
          "type": "object",
          "properties": {
            "countSheetID": {
              "type": "string",
              "format": "uuid"
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "storeID": {
              "type": "string",
              "format": "uuid"
            },
            "countSheetItems": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CountSheetItemGet"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CurrencyGet": {
          "type": "object",
          "properties": {
            "currencyID": {
              "type": "string",
              "format": "uuid"
            },
            "currencyCode": {
              "type": "string",
              "nullable": true
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "exchangeRate": {
              "type": "number",
              "format": "double"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "CurrencyCreate": {
          "required": [
            "currencyCode",
            "date",
            "exchangeRate"
          ],
          "type": "object",
          "properties": {
            "currencyID": {
              "type": "string",
              "format": "uuid"
            },
            "currencyCode": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "exchangeRate": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "CurrencyUpdate": {
          "required": [
            "currencyCode",
            "currencyID",
            "date",
            "exchangeRate"
          ],
          "type": "object",
          "properties": {
            "currencyID": {
              "type": "string",
              "format": "uuid"
            },
            "currencyCode": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "exchangeRate": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "DimensionGet": {
          "type": "object",
          "properties": {
            "dimensionID": {
              "type": "string",
              "format": "uuid"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            },
            "type": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "DimensionCreate": {
          "required": [
            "description",
            "type"
          ],
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "dimensionID": {
              "type": "string",
              "format": "uuid"
            }
          },
          "additionalProperties": false
        },
        "FlagGet": {
          "type": "object",
          "properties": {
            "flagID": {
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "placement": {
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "rowUpdated": {
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "InventoryQueryParameters": {
          "type": "object",
          "properties": {
            "stores": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "description": "- List of StoreIDs",
              "nullable": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "description": "- List of ItemIDs\r\n- If provided the LastUpdated field will be ignored.",
              "nullable": true
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "pageNumber": {
              "type": "integer",
              "description": "- PageNumber Starts at 1",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "description": "- Default page size: 100\r\n- Max page size: 500",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "StoreInventory": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "onHand": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "Inventory": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "stores": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StoreInventory"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ItemAliasCreateRequest": {
          "required": [
            "code",
            "itemID"
          ],
          "type": "object",
          "properties": {
            "itemID": {
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "ItemAliasCreateResponse": {
          "required": [
            "code",
            "itemID"
          ],
          "type": "object",
          "properties": {
            "itemAliasID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "created": {
              "type": "boolean"
            },
            "itemID": {
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "ItemDimension": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "description": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ItemLevel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GenericObject": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            }
          },
          "additionalProperties": false
        },
        "WebProperties": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "extendedDescription": {
              "type": "string",
              "nullable": true
            },
            "availableDate": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "expiresDate": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "sale": {
              "type": "boolean"
            },
            "itemSaleRetail": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "itemSalePercentOff": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "saleBegins": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "saleEnds": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "available": {
              "type": "boolean"
            },
            "flagA": {
              "type": "boolean"
            },
            "flagB": {
              "type": "boolean"
            },
            "flagC": {
              "type": "boolean"
            },
            "tags": {
              "type": "string",
              "nullable": true
            },
            "productType": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Item2StoreGet": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "bin": {
              "type": "string",
              "nullable": true
            },
            "reorderPoint": {
              "type": "number",
              "format": "double"
            },
            "parLevel": {
              "type": "number",
              "format": "double"
            },
            "tariffCode": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "revenueCenterNumber": {
              "type": "string",
              "nullable": true
            },
            "onHand": {
              "type": "number",
              "format": "double"
            },
            "retailPrice1": {
              "type": "number",
              "format": "double"
            },
            "retailPrice2": {
              "type": "number",
              "format": "double"
            },
            "retailPrice3": {
              "type": "number",
              "format": "double"
            },
            "retailPrice4": {
              "type": "number",
              "format": "double"
            },
            "retailPrice5": {
              "type": "number",
              "format": "double"
            },
            "retailPrice6": {
              "type": "number",
              "format": "double"
            },
            "retailPrice7": {
              "type": "number",
              "format": "double"
            },
            "retailPrice8": {
              "type": "number",
              "format": "double"
            },
            "retailPrice9": {
              "type": "number",
              "format": "double"
            },
            "retailPrice10": {
              "type": "number",
              "format": "double"
            },
            "flags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "interfaces": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Item2VendorGet": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "sku": {
              "type": "string",
              "nullable": true
            },
            "price": {
              "type": "number",
              "format": "double"
            },
            "isPrimary": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "ItemImage": {
          "type": "object",
          "properties": {
            "placement": {
              "type": "integer",
              "format": "int64"
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "imageURL": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ItemGet": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "posDescription1": {
              "type": "string",
              "nullable": true
            },
            "posDescription2": {
              "type": "string",
              "nullable": true
            },
            "sku": {
              "type": "string",
              "nullable": true
            },
            "noCount": {
              "type": "boolean"
            },
            "shippingWeight": {
              "type": "number",
              "format": "double"
            },
            "shippingHeight": {
              "type": "number",
              "format": "double"
            },
            "shippingWidth": {
              "type": "number",
              "format": "double"
            },
            "shippingLength": {
              "type": "number",
              "format": "double"
            },
            "uom": {
              "type": "string",
              "nullable": true
            },
            "childCount": {
              "type": "number",
              "format": "double"
            },
            "childUsage": {
              "type": "number",
              "format": "double"
            },
            "upc": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true,
              "readOnly": true
            },
            "active": {
              "type": "boolean"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "dimension1": {
              "$ref": "#/components/schemas/ItemDimension"
            },
            "dimension2": {
              "$ref": "#/components/schemas/ItemDimension"
            },
            "dimension3": {
              "$ref": "#/components/schemas/ItemDimension"
            },
            "dimension4": {
              "$ref": "#/components/schemas/ItemDimension"
            },
            "dimension5": {
              "$ref": "#/components/schemas/ItemDimension"
            },
            "dimension6": {
              "$ref": "#/components/schemas/ItemDimension"
            },
            "dimension7": {
              "$ref": "#/components/schemas/ItemDimension"
            },
            "dimension8": {
              "$ref": "#/components/schemas/ItemDimension"
            },
            "dimension9": {
              "$ref": "#/components/schemas/ItemDimension"
            },
            "dimension10": {
              "$ref": "#/components/schemas/ItemDimension"
            },
            "level": {
              "$ref": "#/components/schemas/ItemLevel"
            },
            "parentItem": {
              "$ref": "#/components/schemas/GenericObject"
            },
            "recipe": {
              "$ref": "#/components/schemas/GenericObject"
            },
            "matrix": {
              "$ref": "#/components/schemas/GenericObject"
            },
            "webProperties": {
              "$ref": "#/components/schemas/WebProperties"
            },
            "stores": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Item2StoreGet"
              },
              "nullable": true
            },
            "vendors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Item2VendorGet"
              },
              "nullable": true
            },
            "images": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ItemImage"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AttachedFileMutation": {
          "required": [
            "description"
          ],
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "AttachedFile": {
          "type": "object",
          "properties": {
            "attachedFileID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "ownerID": {
              "type": "string",
              "format": "uuid"
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "fileData": {
              "type": "string",
              "nullable": true
            },
            "isPicture": {
              "type": "boolean"
            },
            "originalFile": {
              "type": "string",
              "nullable": true
            },
            "imageURL": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ItemRetailCreate": {
          "required": [
            "date",
            "retail1",
            "storeId"
          ],
          "type": "object",
          "properties": {
            "storeId": {
              "type": "string",
              "format": "uuid"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "retail1": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "ItemRetailCreateResponse": {
          "required": [
            "date",
            "retail1",
            "storeId"
          ],
          "type": "object",
          "properties": {
            "userId": {
              "type": "string",
              "format": "uuid"
            },
            "itemID": {
              "type": "string",
              "format": "uuid"
            },
            "storeId": {
              "type": "string",
              "format": "uuid"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "retail1": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "ManualAdjustCreate": {
          "required": [
            "itemID",
            "storeID"
          ],
          "type": "object",
          "properties": {
            "itemID": {
              "type": "string",
              "format": "uuid"
            },
            "storeID": {
              "type": "string",
              "format": "uuid"
            },
            "beanAccountID": {
              "type": "string",
              "format": "uuid"
            },
            "newOnHand": {
              "type": "number",
              "description": "sets a new on hand value for given item at given store",
              "format": "double",
              "nullable": true
            },
            "adjustment": {
              "type": "number",
              "description": "- sets the adjustment for the item at that store\r\n- NewOnHand takes precedence over Adjustment. If both are set, NewOnHand's Value will be used, not Adjustment",
              "format": "double",
              "nullable": true
            },
            "itemCost": {
              "type": "number",
              "description": "New Item Cost (defaults to -1 if a value is not provided)",
              "format": "double",
              "nullable": true
            },
            "reference": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "MetaInfo": {
          "type": "object",
          "properties": {
            "store": {
              "type": "string",
              "nullable": true
            },
            "manufacturer": {
              "type": "string",
              "nullable": true
            },
            "vendor": {
              "type": "string",
              "nullable": true
            },
            "flag": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SendGridUserResponse": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string",
              "format": "uuid"
            },
            "emailSent": {
              "type": "boolean"
            },
            "notified": {
              "type": "boolean",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "POTierApprovalPUT": {
          "required": [
            "approved"
          ],
          "type": "object",
          "properties": {
            "approved": {
              "type": "boolean"
            },
            "notes": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "POTierApprovalPUTResponse": {
          "required": [
            "approved"
          ],
          "type": "object",
          "properties": {
            "updated": {
              "type": "boolean"
            },
            "usersNotified": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SendGridUserResponse"
              },
              "nullable": true
            },
            "isFinalTier": {
              "type": "boolean"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "approved": {
              "type": "boolean"
            },
            "notes": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CommdocApprovalStatus": {
          "type": "object",
          "properties": {
            "commdocID": {
              "type": "string",
              "format": "uuid"
            },
            "status": {
              "type": "string",
              "nullable": true
            },
            "dateTimeOffset": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "type": "string",
              "nullable": true
            },
            "tier": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CommdocLine": {
          "type": "object",
          "properties": {
            "commdocLineID": {
              "type": "string",
              "format": "uuid"
            },
            "thirdPartyLineID": {
              "type": "string",
              "nullable": true
            },
            "lineNumber": {
              "type": "integer",
              "format": "int32"
            },
            "vendorPrice": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "quantity": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "backLinkLineID": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "item": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "commdocID": {
              "type": "string",
              "format": "uuid"
            },
            "itemID": {
              "type": "string",
              "format": "uuid"
            }
          },
          "additionalProperties": false
        },
        "PurchaseOrderGet": {
          "type": "object",
          "properties": {
            "store": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committedByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "due": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "overDue": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "backOrdered": {
              "type": "boolean"
            },
            "canceled": {
              "type": "boolean"
            },
            "paid": {
              "type": "boolean"
            },
            "approvalStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommdocApprovalStatus"
              },
              "nullable": true
            },
            "buyer": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "commdocID": {
              "type": "string",
              "format": "uuid"
            },
            "docNumber": {
              "type": "string",
              "nullable": true
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            },
            "vendor": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "createdByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "thirdPartyID": {
              "type": "string",
              "nullable": true
            },
            "totalAmount": {
              "type": "number",
              "format": "double"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommdocLine"
              },
              "nullable": true
            },
            "store2": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed2": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committed2ByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "bill": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "reference": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructions": {
              "type": "string",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "commit": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "PurchaseOrderLinesCreate": {
          "required": [
            "item",
            "quantity",
            "vendorPrice"
          ],
          "type": "object",
          "properties": {
            "commdocID": {
              "type": "string",
              "format": "uuid"
            },
            "commdocLineID": {
              "type": "string",
              "format": "uuid"
            },
            "thirdPartyLineID": {
              "type": "string",
              "nullable": true
            },
            "lineNumber": {
              "type": "integer",
              "format": "int32"
            },
            "vendorPrice": {
              "type": "number",
              "format": "double"
            },
            "quantity": {
              "type": "number",
              "format": "double"
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "backLinkLineID": {
              "type": "string",
              "format": "uuid"
            },
            "item": {
              "$ref": "#/components/schemas/GenericObject"
            }
          },
          "additionalProperties": false
        },
        "PurchaseOrderCreate": {
          "required": [
            "docNumber",
            "lines",
            "store",
            "totalAmount",
            "vendor"
          ],
          "type": "object",
          "properties": {
            "commdocID": {
              "type": "string",
              "format": "uuid"
            },
            "thirdPartyID": {
              "type": "string",
              "nullable": true
            },
            "docNumber": {
              "type": "string"
            },
            "totalAmount": {
              "type": "number",
              "format": "double"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PurchaseOrderLinesCreate"
              }
            },
            "due": {
              "type": "string",
              "format": "date-time",
              "default": "1911-11-11T00:00:00.0000000",
              "nullable": true
            },
            "overDue": {
              "type": "string",
              "format": "date-time",
              "default": "1911-11-11T00:00:00.0000000",
              "nullable": true
            },
            "reference": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructions": {
              "type": "string",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "backOrdered": {
              "type": "boolean"
            },
            "canceled": {
              "type": "boolean"
            },
            "invoicedEDI": {
              "type": "boolean"
            },
            "committed": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "buyer": {
              "$ref": "#/components/schemas/GenericObject"
            },
            "vendor": {
              "$ref": "#/components/schemas/GenericObject"
            },
            "store": {
              "$ref": "#/components/schemas/GenericObject"
            }
          },
          "additionalProperties": false
        },
        "CommdocApprovalStatuses": {
          "type": "object",
          "properties": {
            "currentTier": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "approvalStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommdocApprovalStatus"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "BackLinkLine": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "lineNumber": {
              "type": "integer",
              "description": "The position this line appears in the back linked document",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "BackLinkDoc": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "type": {
              "type": "string",
              "nullable": true
            },
            "docNumber": {
              "type": "string",
              "nullable": true
            },
            "line": {
              "$ref": "#/components/schemas/BackLinkLine"
            }
          },
          "additionalProperties": false
        },
        "ReceiptLineGet": {
          "type": "object",
          "properties": {
            "commdocLineID": {
              "type": "string",
              "format": "uuid"
            },
            "thirdPartyLineID": {
              "type": "string",
              "nullable": true
            },
            "lineNumber": {
              "type": "integer",
              "format": "int32"
            },
            "vendorPrice": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "quantity": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "backLinkDoc": {
              "$ref": "#/components/schemas/BackLinkDoc"
            },
            "item": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "commdocID": {
              "type": "string",
              "format": "uuid"
            },
            "itemID": {
              "type": "string",
              "format": "uuid"
            },
            "backLinkID": {
              "type": "string",
              "format": "uuid"
            },
            "backLinkType": {
              "type": "string",
              "nullable": true
            },
            "backLinkDocNumber": {
              "type": "string",
              "nullable": true
            },
            "backLinkLineID": {
              "type": "string",
              "format": "uuid"
            },
            "backLinkLineNumber": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "ReceiptGet": {
          "type": "object",
          "properties": {
            "commdocID": {
              "type": "string",
              "format": "uuid"
            },
            "thirdPartyID": {
              "type": "string",
              "nullable": true
            },
            "docNumber": {
              "type": "string",
              "nullable": true
            },
            "reference": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructions": {
              "type": "string",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReceiptLineGet"
              },
              "nullable": true
            },
            "vendor": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "store": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committedByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "paid": {
              "type": "boolean"
            },
            "createdByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            },
            "totalAmount": {
              "type": "number",
              "format": "double"
            },
            "store2": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed2": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committed2ByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "bill": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "due": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "overDue": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "backOrdered": {
              "type": "boolean"
            },
            "canceled": {
              "type": "boolean"
            },
            "buyer": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "FetchAPICommdocLine": {
          "type": "object",
          "properties": {
            "commdocLineID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "commdocID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "backLinkLineID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "itemID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "vendorPrice": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "lastVendorPrice": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "quantity": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "lineNumber": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "converted": {
              "type": "string",
              "nullable": true
            },
            "computedCost": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "rowDeleted": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "RequestCreate": {
          "type": "object",
          "properties": {
            "store": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committedByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "due": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "createCommDocLines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FetchAPICommdocLine"
              },
              "nullable": true
            },
            "doCommit": {
              "type": "boolean"
            },
            "storeID": {
              "type": "string",
              "format": "uuid",
              "readOnly": true
            },
            "commdocID": {
              "type": "string",
              "format": "uuid"
            },
            "docNumber": {
              "type": "string",
              "nullable": true
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            },
            "vendor": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "createdByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "thirdPartyID": {
              "type": "string",
              "nullable": true
            },
            "totalAmount": {
              "type": "number",
              "format": "double"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommdocLine"
              },
              "nullable": true
            },
            "store2": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed2": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committed2ByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "bill": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "overDue": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "backOrdered": {
              "type": "boolean"
            },
            "canceled": {
              "type": "boolean"
            },
            "paid": {
              "type": "boolean"
            },
            "approvalStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommdocApprovalStatus"
              },
              "nullable": true
            },
            "buyer": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "reference": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructions": {
              "type": "string",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "commit": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "SessionItemGet": {
          "type": "object",
          "properties": {
            "sessionItemID": {
              "type": "string",
              "format": "uuid"
            },
            "sessionID": {
              "type": "string",
              "format": "uuid"
            },
            "itemID": {
              "type": "string",
              "format": "uuid"
            },
            "count": {
              "type": "number",
              "format": "double"
            },
            "flagID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "levelID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SessionGet": {
          "type": "object",
          "properties": {
            "sessionID": {
              "type": "string",
              "format": "uuid"
            },
            "storeID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "userID": {
              "type": "string",
              "format": "uuid"
            },
            "device": {
              "type": "string",
              "nullable": true
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            },
            "countSheetID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "sessionItems": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SessionItemGet"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "MobileStatus": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer",
          "format": "int32"
        },
        "SessionItemCreate": {
          "type": "object",
          "properties": {
            "sessionItemID": {
              "type": "string",
              "format": "uuid"
            },
            "sessionID": {
              "type": "string",
              "format": "uuid"
            },
            "itemID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "count": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "flagID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "levelID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "rowDeleted": {
              "type": "boolean",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "SessionCreate": {
          "type": "object",
          "properties": {
            "sessionID": {
              "type": "string",
              "format": "uuid"
            },
            "storeID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "userID": {
              "type": "string",
              "format": "uuid"
            },
            "device": {
              "type": "string",
              "nullable": true
            },
            "countSheetID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "mobileStatus": {
              "$ref": "#/components/schemas/MobileStatus"
            },
            "sessionItems": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SessionItemCreate"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SessionItemCreate2": {
          "required": [
            "count",
            "itemID"
          ],
          "type": "object",
          "properties": {
            "itemID": {
              "type": "string",
              "format": "uuid"
            },
            "count": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "SessionItemMutationResponse": {
          "type": "object",
          "properties": {
            "sessionItemID": {
              "type": "string",
              "format": "uuid"
            },
            "sessionID": {
              "type": "string",
              "format": "uuid"
            },
            "itemID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "count": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SessionItemUpdate": {
          "required": [
            "count"
          ],
          "type": "object",
          "properties": {
            "count": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "StoreGet": {
          "type": "object",
          "properties": {
            "noOnHand": {
              "type": "boolean"
            },
            "revenueCenter": {
              "type": "string",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "storeID": {
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "TPStore": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "TPCodeGet": {
          "required": [
            "code",
            "description",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A unique identifier for the TPCode Record\r\n            \r\nThis is autogenerated by Yellow Dog on creation of the record.",
              "format": "uuid"
            },
            "type": {
              "type": "string",
              "description": "The Type of code being entered. This should be titled specifically for the third party integrator in Pascal case.\r\n            \r\nA common way to type specifically is to prepend the Type with the name of the integration.\r\n\r\nThis will be displayed in the Interfaces tab under the Accounting/Other section as \"Integration Name Tax Grouping\""
            },
            "code": {
              "type": "string",
              "description": "Identifier used by the Integrator to match certain behavior on their side of the integration."
            },
            "description": {
              "type": "string",
              "description": "User friendly description that will be displayed to the user as part of a drop down box titled by the `type`"
            },
            "store": {
              "$ref": "#/components/schemas/TPStore"
            }
          },
          "additionalProperties": false
        },
        "TPCodeCreate": {
          "required": [
            "code",
            "description",
            "type"
          ],
          "type": "object",
          "properties": {
            "store": {
              "$ref": "#/components/schemas/TPStore"
            },
            "id": {
              "type": "string",
              "description": "A unique identifier for the TPCode Record\r\n            \r\nThis is autogenerated by Yellow Dog on creation of the record.",
              "format": "uuid"
            },
            "type": {
              "type": "string",
              "description": "The Type of code being entered. This should be titled specifically for the third party integrator in Pascal case.\r\n            \r\nA common way to type specifically is to prepend the Type with the name of the integration.\r\n\r\nThis will be displayed in the Interfaces tab under the Accounting/Other section as \"Integration Name Tax Grouping\""
            },
            "code": {
              "type": "string",
              "description": "Identifier used by the Integrator to match certain behavior on their side of the integration."
            },
            "description": {
              "type": "string",
              "description": "User friendly description that will be displayed to the user as part of a drop down box titled by the `type`"
            }
          },
          "additionalProperties": false
        },
        "TPCode": {
          "required": [
            "code",
            "description",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A unique identifier for the TPCode Record\r\n            \r\nThis is autogenerated by Yellow Dog on creation of the record.",
              "format": "uuid"
            },
            "type": {
              "type": "string",
              "description": "The Type of code being entered. This should be titled specifically for the third party integrator in Pascal case.\r\n            \r\nA common way to type specifically is to prepend the Type with the name of the integration.\r\n\r\nThis will be displayed in the Interfaces tab under the Accounting/Other section as \"Integration Name Tax Grouping\""
            },
            "code": {
              "type": "string",
              "description": "Identifier used by the Integrator to match certain behavior on their side of the integration."
            },
            "description": {
              "type": "string",
              "description": "User friendly description that will be displayed to the user as part of a drop down box titled by the `type`"
            },
            "store": {
              "$ref": "#/components/schemas/TPStore"
            }
          },
          "additionalProperties": false
        },
        "ProblemDetails": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "status": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "detail": {
              "type": "string",
              "nullable": true
            },
            "instance": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "TPCodeUpdate": {
          "required": [
            "code",
            "description",
            "type"
          ],
          "type": "object",
          "properties": {
            "store": {
              "$ref": "#/components/schemas/TPStore"
            },
            "id": {
              "type": "string",
              "description": "A unique identifier for the TPCode Record\r\n            \r\nThis is autogenerated by Yellow Dog on creation of the record.",
              "format": "uuid"
            },
            "type": {
              "type": "string",
              "description": "The Type of code being entered. This should be titled specifically for the third party integrator in Pascal case.\r\n            \r\nA common way to type specifically is to prepend the Type with the name of the integration.\r\n\r\nThis will be displayed in the Interfaces tab under the Accounting/Other section as \"Integration Name Tax Grouping\""
            },
            "code": {
              "type": "string",
              "description": "Identifier used by the Integrator to match certain behavior on their side of the integration."
            },
            "description": {
              "type": "string",
              "description": "User friendly description that will be displayed to the user as part of a drop down box titled by the `type`"
            }
          },
          "additionalProperties": false
        },
        "TPManufacturer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "sku": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "cost": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "TPVendor": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "sku": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "cost": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "TPItem": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "upc": {
              "type": "string",
              "nullable": true
            },
            "sku": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "category": {
              "type": "string",
              "nullable": true
            },
            "subCategory": {
              "type": "string",
              "nullable": true
            },
            "retail": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "unit": {
              "type": "string",
              "nullable": true
            },
            "manufacturer": {
              "$ref": "#/components/schemas/TPManufacturer"
            },
            "vendor": {
              "$ref": "#/components/schemas/TPVendor"
            }
          },
          "additionalProperties": false
        },
        "TPGenericCount": {
          "type": "object",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "unit": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "TPSessionItem": {
          "required": [
            "counted",
            "item"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "flag": {
              "type": "string",
              "nullable": true
            },
            "device": {
              "type": "string",
              "nullable": true
            },
            "dateTime": {
              "type": "string",
              "format": "date-time"
            },
            "item": {
              "$ref": "#/components/schemas/TPItem"
            },
            "counted": {
              "type": "number",
              "format": "double"
            },
            "countedWeight": {
              "$ref": "#/components/schemas/TPGenericCount"
            },
            "countedVolume": {
              "$ref": "#/components/schemas/TPGenericCount"
            },
            "fullWeight": {
              "$ref": "#/components/schemas/TPGenericCount"
            },
            "tareWeight": {
              "$ref": "#/components/schemas/TPGenericCount"
            }
          },
          "additionalProperties": false
        },
        "TPSessionGet": {
          "required": [
            "description",
            "lines"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "createdByUser": {
              "$ref": "#/components/schemas/GenericObject"
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "source": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string"
            },
            "dateTime": {
              "type": "string",
              "format": "date-time"
            },
            "store": {
              "$ref": "#/components/schemas/TPStore"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TPSessionItem"
              }
            }
          },
          "additionalProperties": false
        },
        "TPSession": {
          "required": [
            "description",
            "lines"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "source": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string"
            },
            "dateTime": {
              "type": "string",
              "format": "date-time"
            },
            "store": {
              "$ref": "#/components/schemas/TPStore"
            },
            "createdByUser": {
              "$ref": "#/components/schemas/GenericObject"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TPSessionItem"
              }
            }
          },
          "additionalProperties": false
        },
        "TransactionLine": {
          "required": [
            "itemRetail",
            "quantity",
            "transactionLineNumber"
          ],
          "type": "object",
          "properties": {
            "converted": {
              "type": "string",
              "nullable": true
            },
            "itemNumber": {
              "type": "string",
              "nullable": true
            },
            "sku": {
              "type": "string",
              "nullable": true
            },
            "itemDescription": {
              "type": "string",
              "nullable": true
            },
            "itemRetail": {
              "type": "number",
              "format": "double"
            },
            "baseRetail": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "itemDiscount": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "discountDescription": {
              "type": "string",
              "nullable": true
            },
            "quantity": {
              "type": "number",
              "format": "double"
            },
            "transactionLineNumber": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            },
            "parent": {
              "type": "string",
              "description": "This field should contain the ThirdPartyLineID of the line it is modifying.",
              "nullable": true
            },
            "item": {
              "$ref": "#/components/schemas/GenericObject"
            }
          },
          "additionalProperties": false
        },
        "Transaction": {
          "required": [
            "checkClosed",
            "lines",
            "store",
            "transactionNumber"
          ],
          "type": "object",
          "properties": {
            "thirdPartyId": {
              "type": "string",
              "description": "This field will uniquely identify a transaction and lines that go with the transaction.",
              "nullable": true
            },
            "transactionNumber": {
              "type": "string"
            },
            "checkClosed": {
              "type": "string",
              "format": "date-time"
            },
            "employeeNumber": {
              "type": "string",
              "nullable": true
            },
            "employeeName": {
              "type": "string",
              "nullable": true
            },
            "tender": {
              "type": "string",
              "nullable": true
            },
            "registerNumber": {
              "type": "string",
              "nullable": true
            },
            "registerName": {
              "type": "string",
              "nullable": true
            },
            "reference": {
              "type": "string",
              "nullable": true
            },
            "store": {
              "$ref": "#/components/schemas/GenericObject"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransactionLine"
              }
            }
          },
          "additionalProperties": false
        },
        "CommDocLineUpdate": {
          "type": "object",
          "properties": {
            "commdocLineID": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "quantity": {
              "type": "number",
              "format": "double"
            },
            "notes": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "TransferAccept": {
          "type": "object",
          "properties": {
            "store": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "createCommDocLines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommDocLineUpdate"
              },
              "nullable": true
            },
            "doCommit": {
              "type": "boolean"
            },
            "storeID": {
              "type": "string",
              "format": "uuid",
              "readOnly": true
            },
            "commdocID": {
              "type": "string",
              "format": "uuid"
            },
            "docNumber": {
              "type": "string",
              "nullable": true
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            },
            "vendor": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "createdByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "thirdPartyID": {
              "type": "string",
              "nullable": true
            },
            "totalAmount": {
              "type": "number",
              "format": "double"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommdocLine"
              },
              "nullable": true
            },
            "store2": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committedByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed2": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committed2ByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "bill": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "due": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "overDue": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "backOrdered": {
              "type": "boolean"
            },
            "canceled": {
              "type": "boolean"
            },
            "paid": {
              "type": "boolean"
            },
            "approvalStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommdocApprovalStatus"
              },
              "nullable": true
            },
            "buyer": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "reference": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructions": {
              "type": "string",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "commit": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "CommDocLineCreate": {
          "type": "object",
          "properties": {
            "itemID": {
              "type": "string",
              "format": "uuid"
            },
            "quantity": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "TransferCreate": {
          "type": "object",
          "properties": {
            "fromStore": {
              "type": "string",
              "format": "uuid"
            },
            "toStore": {
              "type": "string",
              "format": "uuid"
            },
            "due": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommdocLine"
              },
              "nullable": true
            },
            "thirdPartyID": {
              "type": "string",
              "nullable": true
            },
            "totalAmount": {
              "type": "number",
              "format": "double"
            },
            "store": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "store2": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committedByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed2": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committed2ByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "bill": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "overDue": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "backOrdered": {
              "type": "boolean"
            },
            "canceled": {
              "type": "boolean"
            },
            "paid": {
              "type": "boolean"
            },
            "approvalStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommdocApprovalStatus"
              },
              "nullable": true
            },
            "buyer": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "reference": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructions": {
              "type": "string",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "commit": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "Transfer": {
          "type": "object",
          "properties": {
            "store": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "store2": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committedByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "committed2": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "committed2ByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "due": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "commdocID": {
              "type": "string",
              "format": "uuid"
            },
            "docNumber": {
              "type": "string",
              "nullable": true
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            },
            "vendor": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "createdByUser": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "thirdPartyID": {
              "type": "string",
              "nullable": true
            },
            "totalAmount": {
              "type": "number",
              "format": "double"
            },
            "lines": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommdocLine"
              },
              "nullable": true
            },
            "bill": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "overDue": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "backOrdered": {
              "type": "boolean"
            },
            "canceled": {
              "type": "boolean"
            },
            "paid": {
              "type": "boolean"
            },
            "approvalStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommdocApprovalStatus"
              },
              "nullable": true
            },
            "buyer": {
              "type": "object",
              "additionalProperties": false,
              "nullable": true
            },
            "reference": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructions": {
              "type": "string",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "commit": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "TransferUpdate": {
          "type": "object",
          "properties": {
            "due": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "reference": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructions": {
              "type": "string",
              "nullable": true
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "commit": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "VendorContact": {
          "type": "object",
          "properties": {
            "vendorID": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "phone": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "fax": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "cell": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "email": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "street": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "city": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "state": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "zip": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "country": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "other": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Vendor2Store": {
          "type": "object",
          "properties": {
            "vendorID": {
              "type": "string",
              "format": "uuid"
            },
            "storeId": {
              "type": "string",
              "format": "uuid"
            },
            "available": {
              "type": "boolean"
            },
            "beanCode": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "taxNumber": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "terms": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "reference1": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "VendorGet": {
          "type": "object",
          "properties": {
            "vendorID": {
              "type": "string",
              "format": "uuid"
            },
            "converted": {
              "type": "string",
              "nullable": true
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "url": {
              "type": "string",
              "nullable": true
            },
            "collectsTax": {
              "type": "boolean"
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "approved": {
              "type": "boolean"
            },
            "currencyCode": {
              "type": "string",
              "nullable": true
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time"
            },
            "orderFrom": {
              "$ref": "#/components/schemas/VendorContact"
            },
            "returnTo": {
              "$ref": "#/components/schemas/VendorContact"
            },
            "stores": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Vendor2Store"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "VendorCreate": {
          "required": [
            "code",
            "description"
          ],
          "type": "object",
          "properties": {
            "vendorID": {
              "type": "string",
              "format": "uuid"
            },
            "converted": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "code": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            },
            "description": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            },
            "url": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "collectsTax": {
              "type": "boolean"
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "approved": {
              "type": "boolean"
            },
            "currencyCode": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "orderFrom": {
              "$ref": "#/components/schemas/VendorContact"
            },
            "returnTo": {
              "$ref": "#/components/schemas/VendorContact"
            },
            "stores": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Vendor2Store"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "VendorUpdate": {
          "required": [
            "code",
            "description"
          ],
          "type": "object",
          "properties": {
            "vendorID": {
              "type": "string",
              "format": "uuid"
            },
            "converted": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "code": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            },
            "description": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            },
            "url": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "collectsTax": {
              "type": "boolean"
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "approved": {
              "type": "boolean"
            },
            "currencyCode": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "orderFrom": {
              "$ref": "#/components/schemas/VendorContact"
            },
            "returnTo": {
              "$ref": "#/components/schemas/VendorContact"
            },
            "stores": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Vendor2Store"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        }
      }
    },
    "tags": [
      {
        "name": "Accounting",
        "description": "Accounting Export Reports that can be consumed by 3rd Party accounting systems"
      },
      {
        "name": "AttachedFile",
        "description": "Items, Recipes, and Purchasing Documents are able to have files of record or images associated to them."
      },
      {
        "name": "CountSheets",
        "description": "A dynamic list of Items that are designed to aide with physical inventories. Countsheets are based on a static list of items, Levels, and Flags"
      },
      {
        "name": "Currency",
        "description": "Operations used to manage currency conversion for the database. These are used when multiple currencies are used in a database."
      },
      {
        "name": "Dimensions",
        "description": "Attributes that are available for assigning to an Item. Attributes can be like a Size or Color."
      },
      {
        "name": "Flags",
        "description": "Flags allow you to indicate storage locations, making ordering and physical inventories easier."
      },
      {
        "name": "Inventory",
        "description": "Item Inventory OnHand information."
      },
      {
        "name": "ItemAliases",
        "description": "UPCs or additional SKUs to for an Item."
      },
      {
        "name": "Items",
        "description": "Product information that is tracked in Yellow Dog Inventory."
      },
      {
        "name": "ManualAdjusts",
        "description": "A Manual Adjustment will affect an Item's OnHand."
      },
      {
        "name": "MetaInfo",
        "description": "Database specific configuration information"
      },
      {
        "name": "PurchaseOrders",
        "description": "A Purchasing document"
      },
      {
        "name": "Receipts",
        "description": "A Receiving document"
      },
      {
        "name": "Recipes",
        "description": "Collections of items and recipes, with quantities, that are used to create other items."
      },
      {
        "name": "Requests",
        "description": "A requestition for purchasing or transfering an item."
      },
      {
        "name": "Sessions",
        "description": "Associate a count to an Item, these sessions can be used for Purchasing Documents or Physical Inventories."
      },
      {
        "name": "Stores",
        "description": "Business Entities or locations of a single business entity that need to maintain their own inventory records."
      },
      {
        "name": "ThirdPartyCodes",
        "description": "Additional configuration options that control item, store or level behavior with third-party integrations"
      },
      {
        "name": "ThirdPartySessions",
        "description": "Records that increment or decrement inventory based on customer interactions with a store"
      },
      {
        "name": "Transactions",
        "description": "Records that increment or decrement inventory based on customer interactions with a store"
      },
      {
        "name": "Transfers",
        "description": "A record of movement of Items from one Store to another."
      },
      {
        "name": "Vendors",
        "description": "Vendors, Suppliers, Distributors, or Manufacturors that provide Items into the Inventory."
      }
    ]
  }